version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.17
  slack: circleci/slack@3.4.2
  discord: antonioned/discord@0.0.4

jobs:
  tests:
    working_directory: ~/pillar-bcx-pubsub
    docker:
      - image: circleci/node:8.15.1
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: |
            curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ./.npmrc
            echo "registry=https://pillarproject.jfrog.io/pillarproject/api/npm/npm/" >> ./.npmrc
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install dependenciues
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
#      - run:
#          name: eslint
#          command: npm run lint
      - run:
          name: unit-test
          command: npm run test:coverage
#      - run:
#          name: plato
#          command:  npm run plato
      - store_artifacts:
          path: ./reports/
          destination: reports
      - slack/status:
          fail_only: true
          failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n *$CIRCLE_JOB* have failed! :circleci-fail:"
          webhook: "${SLACK_WEBHOOK_URL}"
      - discord/status:
          fail_only: true
          failure_message: "Triggered by: **${CIRCLE_USERNAME}** \\n\\n **$CIRCLE_JOB** have failed!"
          webhook: "${DISCORD_WEBHOOK_URL}"

  publish-and-push-qa:
    working_directory: ~/pillar-bcx-pubsub
    docker:
      - image: circleci/node:8.15.1
    steps:
      - checkout
      - run:
          name: install python
          command: sudo apt-get update && sudo apt-get install python3
      - run:
          name: Install pip
          command: sudo apt-get update && sudo apt-get install -y python3-pip && sudo apt-get install -y libxml2-dev libxslt1-dev build-essential python-dev libssl-dev
      - aws-cli/setup:
           aws-access-key-id: STAGING_AWS_ACCESS_KEY_ID
           aws-secret-access-key: STAGING_AWS_SECRET_ACCESS_KEY
           aws-region: AWS_DEFAULT_REGION
      - run:
          name: Append circleCI build number to version
          command: |
            git config user.email "devops@pillar.io"
            git config user.name "Issabot"
            npm version $(node -e "const currentVersion=require('./package.json').version; const firstTwoDots=currentVersion.substring(0, currentVersion.lastIndexOf('.')+1); console.log(firstTwoDots);")$CIRCLE_BUILD_NUM
      - run:
          name: Authenticate with registry
          command: |
            curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ~/pillar-bcx-pubsub/.npmrc
            echo "registry=https://pillarproject.jfrog.io/pillarproject/api/npm/npm/" >> ./.npmrc
      - run:
          name: Publish Package to Artifactory
          command: |
            npm publish --registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
      - run:
          name: Push txt file to S3 bucket
          command: |
            touch pillar-bcx-pubsub.txt
            echo "$(node -e "console.log(require('./package.json').name)")@$(node -e "const currentVersion=require('./package.json').version; const firstTwoDots=currentVersion.substring(0, currentVersion.lastIndexOf('.')+1); console.log(firstTwoDots);")$CIRCLE_BUILD_NUM" > pillar-bcx-pubsub.txt
            aws --region $AWS_DEFAULT_REGION s3 cp pillar-bcx-pubsub.txt $QA_RELEASE_BUCKET
      - run:
          name: Announce Deployment
          command: |
            chmod +x .circleci/announceDeployment.sh
            chmod +x .circleci/announceDiscord.sh
            .circleci/announceDeployment.sh "BCX-PUBSUB" "QA" "$(cat ./pillar-bcx-pubsub.txt)"
            .circleci/announceDiscord.sh "BCX-PUBSUB" "QA" "$(cat ./pillar-bcx-pubsub.txt)"
      - slack/status:
          fail_only: true
          failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n *$CIRCLE_JOB* has failed, no deploy to QA. :circleci-fail:"
          webhook: "${SLACK_WEBHOOK_URL}"
      - discord/status:
          fail_only: true
          failure_message: "Triggered by: **${CIRCLE_USERNAME}** \\n\\n **$CIRCLE_JOB** has failed, no deploy to QA."
          webhook: "${DISCORD_WEBHOOK_URL}"

  publish-prod:
    working_directory: ~/pillar-bcx-pubsub
    docker:
      - image: circleci/node:8.15.1
    steps:
      - checkout
      - run:
          name: Append circleCI build number to version
          command: |
            git config user.email "devops@pillar.io"
            git config user.name "Issabot"
            npm version $(node -e "const currentVersion=require('./package.json').version; const firstTwoDots=currentVersion.substring(0, currentVersion.lastIndexOf('.')+1); console.log(firstTwoDots);")$CIRCLE_BUILD_NUM
      - run:
          name: Authenticate with registry
          command: |
            curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ~/pillar-bcx-pubsub/.npmrc
            echo "registry=https://pillarproject.jfrog.io/pillarproject/api/npm/npm/" >> ./.npmrc
      - run:
          name: Publish Package to Artifactory
          command: |
            npm publish --registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
            chmod +x .circleci/announceRelease.sh && .circleci/announceRelease.sh "BCX-PUBSUB" "$(node -e "console.log(require('./package.json').name)"):$(node -e "console.log($CIRCLE_BUILD_NUM)")"
            chmod +x .circleci/announceDiscordProd.sh && .circleci/announceDiscordProd.sh "BCX-PUBSUB" "$(node -e "console.log(require('./package.json').name)"):$(node -e "console.log($CIRCLE_BUILD_NUM)")"
      - slack/status:
          fail_only: true
          failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n *$CIRCLE_JOB* has failed. :circleci-fail:"
          webhook: "${SLACK_WEBHOOK_URL}"
      - discord/status:
          fail_only: true
          failure_message: "Triggered by: **${CIRCLE_USERNAME}** \\n\\n **$CIRCLE_JOB** has failed."
          webhook: "${DISCORD_WEBHOOK_URL}"

workflows:
  version: 2.1
  test_and_publish:
    jobs:
      - tests
      - publish-and-push-qa:
          requires:
             - tests
          filters:
            branches:
              only:
                  - master
      - publish-prod:
          requires:
             - tests
          filters:
            branches:
              only:
                  - master
